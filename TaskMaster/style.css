* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: Segoe UI;
}

@property --angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

body {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(#010220, #021057);
  backdrop-filter: brightness(75%);

}

.container {
  display: flex;
  gap: 40px;
  position: relative;
  transition: width 1s ease;
  overflow: hidden;
  border-radius: 20px;
  padding: 15px;
  width: 603px;
}

.tasks {
  z-index: 1;
}

.pendingTask {
  background-color: #021057;
  min-width: 400px;
  width: 100%;
  height: 100%;
  border-radius: 20px;
  display: flex;
  flex-direction: column;
  padding: 20px;
  height: 760px;
  gap: 20px;
  align-items: center;
  position: relative;
}

.pendingTask::after,
.pendingTask::before {
  content: "";
  position: absolute;
  height: 100%;
  width: 100%;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  background: conic-gradient(from var(--angle), var(--conicColors));
  z-index: -5;
  border-radius: 20px;
  padding: 5px;
  animation: 3s linear spin infinite;
}

.pendingTask::before {
  filter: blur(0.4rem);
}
.pendingTask div {
  display: flex;
  align-items: center;
  gap: 5px;
  width: 100%;
  justify-content: space-between;
}
.pendingTask div input {
height: 27.6px;
}

.date {
  overflow: hidden;
  transition: all 0.3s;
  position: relative;
  width: 20px;
}

.date input {
  transition: all 0.3s;
  width: 97.9px;
  position: absolute;
  z-index: -1;
  opacity: 0;
  border-radius: 10px;
  border: none;
  padding: 5px;
  outline: none;
  background-color: white;
}

input[type="submit"] {
  border-radius: 10px;
  border: none;
  padding: 5px;
  outline: none;
  background-color: white;
  cursor: pointer;
  font-weight: 700;
}

input[type="text"] {
  border-radius: 10px;
  border: none;
  padding: 5px;
  outline: none;
  background-color: white;
  width: 140px;
}

.taskAdder {
  border-radius: 20px;
  padding: 20px;
  min-width: 400px;
}

.add {
  display: flex;
  gap: 10px;
  margin: 0 auto;
}
.completedTask {
  width: 100%;
  height: 100%;
  border-radius: 20px;
  height: 760px;
  position: relative;
  transition: 1s all;
  opacity: 0;
  transform: translateX(-100%);
}

.inner {
  background-color: #021057;
  height: 100%;
  border-radius: 20px;
  padding: 20px;
}

.completedTask::after,
.completedTask::before {
  content: "";
  position: absolute;
  height: 100%;
  width: 100%;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  background: conic-gradient(from var(--angle), var(--conicColors));
  z-index: -5;
  border-radius: 20px;
  padding: 5px;
  animation: 3s linear spin infinite;
}

.completedTask::before {
  filter: blur(0.4rem);
}

table {
  text-align: center;
  transition: all 0.3s;
  overflow: scroll;
  margin: 0 auto;
}

th {
  font-size: x-large;
  padding: 10px;
  background-color: hsla(238, 94%, 6%);
  border-radius: 20px;
  transition: all 0.3s;
}

td {
  font-size: large;
  padding: 5px;
  max-width: 500px;
  word-break: break-all;
  transition: all 0.3s;
}
.dragging {
  transform: scale(1.025);
}
tr {
  transition: all 0.3s;
}

.img {
  font-size: 23px;
  cursor: pointer;
  position: static;
}

.overflow {
  overflow: scroll;
}

@keyframes spin {
  from {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}

::-webkit-scrollbar {
  display: none;
}
input::placeholder {
  font-weight: bold;
  color: black;
  font-size: smaller;
}

.edit{
  color: yellow;
  cursor: pointer;
}
.delete{
  color: red;
  cursor: pointer;
}

.arrow{
  font-size: 20px;
  transition: all 0.3s;
  cursor: pointer;
  color: white;
}
label{
  display: flex;
  justify-self: end;

}

.settings {
  position: absolute;
  background-color: rgb(0, 0, 0, 0.3);
  backdrop-filter: blur(10px);
  z-index: 5;
  width: max-content;
  padding: 50px;
  border-radius: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 20px;
  border: white solid 4px;
  max-width: 1000px;
}

.color {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  text-align: center;
  gap: 30px;
}

.colors {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;
}

.viscol {
  background-color: black;
  width: 100px;
  height: 100px;
  border-radius: 7.5px;
  border: white solid 4px;
}
.colorborder {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 10px;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 20px;
  border-radius: 15px;
  border: white solid 4px;
}

.settings p {
  font-weight: 700;
  font-size: 30px;
  background-color: #fff;
  padding: 5px;
  border-radius: 15px;
  text-shadow: none;
  color:black;

}

.settings input {
  color: black;
  font-weight: 900;
  border: white solid 4px;
}

.settings input[type=submit] {
  color: black;
  font-weight: 900;
}

.settings h2 {
  position: absolute;
  right: 10px;
  top: 10px;
  font-size: xx-large;
  background-color: #fff;
  width: max-content;
  padding: 0px 10px;
  border-radius: 5px;
  cursor: pointer;
  color: #000;
}

.divide{
  display: flex;
  gap: 20px;
}

.okey{
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.colorwheels{
overflow: scroll;
display: flex;
flex-direction: column;
gap: 5px;
padding: 10px;
transition: all 1s;
width: 80px;
background-color: rgb(8, 8, 8);
  border: white solid 4px;
  border-radius: 15px;
  height: 565px;

}

.colorwheel{
  display: flex;
  width: 40px;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  flex-wrap: wrap;
  border-radius: 100%;
  cursor: pointer;
}
.colorwheel:hover {
  transform: scale(1.1);
}
.colordiv:hover .h6 {
  position: absolute;
  right: 0px;
  top: 5px;
  z-index: 10;
  color: red;
  opacity: 1;
  cursor: pointer;
  z-index: 1;
}

.h6 {
  z-index: -1;
  right: 0px;
  top: 5px;
  position: absolute;
  color: red;
  cursor: pointer;
  opacity: 0;
  transition: all 0.3s;
}

.size{
  width: 20px;
  height: 20px;
}

.colordiv{
  position: relative;
  height: max-content;
  padding: 10px;
  border-radius: 100%;
  transition: all 1s;
  
}
